int singleNonDuplicate(vector<int>& a) {
        int start = 0, end = a.size()-1;
        if(a.size() == 1)
            return a[0];
        while(start <= end){
            int mid = start + (end-start)/2;
            if(mid == 0 and a[mid] != a[mid+1])
                return a[mid];
            if(mid == a.size()-1 and a[a.size()-1] != a[a.size()-2])
                return a[mid];
            if(a[mid-1] != a[mid]  and a[mid] != a[mid+1]){
                return a[mid];
            }else if(mid%2==0){
                if(a[mid-1] == a[mid]){
                    end = mid-1;
                }else{
                    start = mid+1;
                }
            }else{
                if(a[mid-1] == a[mid]){
                    start = mid+1;
                }else{
                    end = mid-1;
                }
            }
        }
        return -1;
    }
